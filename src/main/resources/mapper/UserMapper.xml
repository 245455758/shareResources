<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.trouble.shareresources.mapper.UserMapper" >
    <resultMap id="BaseResultMap" type="com.trouble.shareresources.pojo.User" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="realname" property="realname" jdbcType="VARCHAR" />
        <result column="telephone" property="telephone" jdbcType="VARCHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="unit" property="unit" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="businessname" property="businessname" jdbcType="VARCHAR" />
        <result column="connect_man" property="connectMan" jdbcType="VARCHAR" />
        <result column="role" property="role" jdbcType="VARCHAR" />
        <result column="role_group" property="roleGroup" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
        id, username, realname, telephone, email, unit, password, businessname, connect_man,
        role, role_group
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.trouble.shareresources.pojo.UserExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from user
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.trouble.shareresources.pojo.UserExample" >
        delete from user
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.trouble.shareresources.pojo.User" >
        insert into user (id, username, realname,
        telephone, email, unit,
        password, businessname, connect_man,
        role, role_group)
        values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR},
        #{telephone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR},
        #{password,jdbcType=VARCHAR}, #{businessname,jdbcType=VARCHAR}, #{connectMan,jdbcType=VARCHAR},
        #{role,jdbcType=VARCHAR}, #{roleGroup,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.trouble.shareresources.pojo.User" >
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="username != null" >
                username,
            </if>
            <if test="realname != null" >
                realname,
            </if>
            <if test="telephone != null" >
                telephone,
            </if>
            <if test="email != null" >
                email,
            </if>
            <if test="unit != null" >
                unit,
            </if>
            <if test="password != null" >
                password,
            </if>
            <if test="businessname != null" >
                businessname,
            </if>
            <if test="connectMan != null" >
                connect_man,
            </if>
            <if test="role != null" >
                role,
            </if>
            <if test="roleGroup != null" >
                role_group,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null" >
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="realname != null" >
                #{realname,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null" >
                #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="email != null" >
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="unit != null" >
                #{unit,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="businessname != null" >
                #{businessname,jdbcType=VARCHAR},
            </if>
            <if test="connectMan != null" >
                #{connectMan,jdbcType=VARCHAR},
            </if>
            <if test="role != null" >
                #{role,jdbcType=VARCHAR},
            </if>
            <if test="roleGroup != null" >
                #{roleGroup,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.trouble.shareresources.pojo.UserExample" resultType="java.lang.Integer" >
        select count(*) from user
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update user
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.username != null" >
                username = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.realname != null" >
                realname = #{record.realname,jdbcType=VARCHAR},
            </if>
            <if test="record.telephone != null" >
                telephone = #{record.telephone,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null" >
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.unit != null" >
                unit = #{record.unit,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null" >
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.businessname != null" >
                businessname = #{record.businessname,jdbcType=VARCHAR},
            </if>
            <if test="record.connectMan != null" >
                connect_man = #{record.connectMan,jdbcType=VARCHAR},
            </if>
            <if test="record.role != null" >
                role = #{record.role,jdbcType=VARCHAR},
            </if>
            <if test="record.roleGroup != null" >
                role_group = #{record.roleGroup,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update user
        set id = #{record.id,jdbcType=INTEGER},
        username = #{record.username,jdbcType=VARCHAR},
        realname = #{record.realname,jdbcType=VARCHAR},
        telephone = #{record.telephone,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR},
        unit = #{record.unit,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=VARCHAR},
        businessname = #{record.businessname,jdbcType=VARCHAR},
        connect_man = #{record.connectMan,jdbcType=VARCHAR},
        role = #{record.role,jdbcType=VARCHAR},
        role_group = #{record.roleGroup,jdbcType=VARCHAR}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.trouble.shareresources.pojo.User" >
        update user
        <set >
            <if test="username != null" >
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="realname != null" >
                realname = #{realname,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null" >
                telephone = #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="email != null" >
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="unit != null" >
                unit = #{unit,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="businessname != null" >
                businessname = #{businessname,jdbcType=VARCHAR},
            </if>
            <if test="connectMan != null" >
                connect_man = #{connectMan,jdbcType=VARCHAR},
            </if>
            <if test="role != null" >
                role = #{role,jdbcType=VARCHAR},
            </if>
            <if test="roleGroup != null" >
                role_group = #{roleGroup,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.trouble.shareresources.pojo.User" >
        update user
        set username = #{username,jdbcType=VARCHAR},
        realname = #{realname,jdbcType=VARCHAR},
        telephone = #{telephone,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        unit = #{unit,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        businessname = #{businessname,jdbcType=VARCHAR},
        connect_man = #{connectMan,jdbcType=VARCHAR},
        role = #{role,jdbcType=VARCHAR},
        role_group = #{roleGroup,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>